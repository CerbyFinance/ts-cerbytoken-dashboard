// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ApprovedBurnProof extends ethereum.Event {
  get params(): ApprovedBurnProof__Params {
    return new ApprovedBurnProof__Params(this);
  }
}

export class ApprovedBurnProof__Params {
  _event: ApprovedBurnProof;

  constructor(event: ApprovedBurnProof) {
    this._event = event;
  }

  get burnProofHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ProofOfBurn extends ethereum.Event {
  get params(): ProofOfBurn__Params {
    return new ProofOfBurn__Params(this);
  }
}

export class ProofOfBurn__Params {
  _event: ProofOfBurn;

  constructor(event: ProofOfBurn) {
    this._event = event;
  }

  get mintToken(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get burnToken(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get mintCaller(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get burnCaller(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get burnAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get burnNonce(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get mintChainType(): i32 {
    return this._event.parameters[6].value.toI32();
  }

  get mintChainId(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get burnChainType(): i32 {
    return this._event.parameters[8].value.toI32();
  }

  get burnChainId(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get burnProofHash(): Bytes {
    return this._event.parameters[10].value.toBytes();
  }
}

export class ProofOfMint extends ethereum.Event {
  get params(): ProofOfMint__Params {
    return new ProofOfMint__Params(this);
  }
}

export class ProofOfMint__Params {
  _event: ProofOfMint;

  constructor(event: ProofOfMint) {
    this._event = event;
  }

  get mintToken(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get burnToken(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get mintCaller(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get burnCaller(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get burnAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get mintChainType(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get mintChainId(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get burnChainType(): i32 {
    return this._event.parameters[7].value.toI32();
  }

  get burnChainId(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get burnProofHash(): Bytes {
    return this._event.parameters[9].value.toBytes();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class CrossChainBridge extends ethereum.SmartContract {
  static bind(address: Address): CrossChainBridge {
    return new CrossChainBridge("CrossChainBridge", address);
  }

  ROLE_ADMIN(): Bytes {
    let result = super.call("ROLE_ADMIN", "ROLE_ADMIN():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ROLE_ADMIN(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ROLE_ADMIN", "ROLE_ADMIN():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  allowances(param0: Bytes): i32 {
    let result = super.call("allowances", "allowances(bytes32):(uint8)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);

    return result[0].toI32();
  }

  try_allowances(param0: Bytes): ethereum.CallResult<i32> {
    let result = super.tryCall("allowances", "allowances(bytes32):(uint8)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  burnProofStorage(param0: Bytes): i32 {
    let result = super.call(
      "burnProofStorage",
      "burnProofStorage(bytes32):(uint8)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return result[0].toI32();
  }

  try_burnProofStorage(param0: Bytes): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "burnProofStorage",
      "burnProofStorage(bytes32):(uint8)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  nonceByToken(param0: Address): BigInt {
    let result = super.call("nonceByToken", "nonceByToken(address):(uint32)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_nonceByToken(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "nonceByToken",
      "nonceByToken(address):(uint32)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApproveBurnProofCall extends ethereum.Call {
  get inputs(): ApproveBurnProofCall__Inputs {
    return new ApproveBurnProofCall__Inputs(this);
  }

  get outputs(): ApproveBurnProofCall__Outputs {
    return new ApproveBurnProofCall__Outputs(this);
  }
}

export class ApproveBurnProofCall__Inputs {
  _call: ApproveBurnProofCall;

  constructor(call: ApproveBurnProofCall) {
    this._call = call;
  }

  get proofHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ApproveBurnProofCall__Outputs {
  _call: ApproveBurnProofCall;

  constructor(call: ApproveBurnProofCall) {
    this._call = call;
  }
}

export class BurnAndCreateProofCall extends ethereum.Call {
  get inputs(): BurnAndCreateProofCall__Inputs {
    return new BurnAndCreateProofCall__Inputs(this);
  }

  get outputs(): BurnAndCreateProofCall__Outputs {
    return new BurnAndCreateProofCall__Outputs(this);
  }
}

export class BurnAndCreateProofCall__Inputs {
  _call: BurnAndCreateProofCall;

  constructor(call: BurnAndCreateProofCall) {
    this._call = call;
  }

  get burnToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get mintGenericToken(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get mintGenericCaller(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get burnAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get mintChainType(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get mintChainId(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class BurnAndCreateProofCall__Outputs {
  _call: BurnAndCreateProofCall;

  constructor(call: BurnAndCreateProofCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class GrantRolesBulkCall extends ethereum.Call {
  get inputs(): GrantRolesBulkCall__Inputs {
    return new GrantRolesBulkCall__Inputs(this);
  }

  get outputs(): GrantRolesBulkCall__Outputs {
    return new GrantRolesBulkCall__Outputs(this);
  }
}

export class GrantRolesBulkCall__Inputs {
  _call: GrantRolesBulkCall;

  constructor(call: GrantRolesBulkCall) {
    this._call = call;
  }

  get roles(): Array<GrantRolesBulkCallRolesStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      GrantRolesBulkCallRolesStruct
    >();
  }
}

export class GrantRolesBulkCall__Outputs {
  _call: GrantRolesBulkCall;

  constructor(call: GrantRolesBulkCall) {
    this._call = call;
  }
}

export class GrantRolesBulkCallRolesStruct extends ethereum.Tuple {
  get role(): Bytes {
    return this[0].toBytes();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class MintWithBurnProofCall extends ethereum.Call {
  get inputs(): MintWithBurnProofCall__Inputs {
    return new MintWithBurnProofCall__Inputs(this);
  }

  get outputs(): MintWithBurnProofCall__Outputs {
    return new MintWithBurnProofCall__Outputs(this);
  }
}

export class MintWithBurnProofCall__Inputs {
  _call: MintWithBurnProofCall;

  constructor(call: MintWithBurnProofCall) {
    this._call = call;
  }

  get mintToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get burnGenericToken(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get burnGenericCaller(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get burnChainType(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get burnChainId(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get burnAmount(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get burnNonce(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get burnProofHash(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }
}

export class MintWithBurnProofCall__Outputs {
  _call: MintWithBurnProofCall;

  constructor(call: MintWithBurnProofCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetAllowanceCall extends ethereum.Call {
  get inputs(): SetAllowanceCall__Inputs {
    return new SetAllowanceCall__Inputs(this);
  }

  get outputs(): SetAllowanceCall__Outputs {
    return new SetAllowanceCall__Outputs(this);
  }
}

export class SetAllowanceCall__Inputs {
  _call: SetAllowanceCall;

  constructor(call: SetAllowanceCall) {
    this._call = call;
  }

  get mintGenericToken(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get burnGenericToken(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get mintChainType(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get mintChainId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get burnChainType(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get burnChainId(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class SetAllowanceCall__Outputs {
  _call: SetAllowanceCall;

  constructor(call: SetAllowanceCall) {
    this._call = call;
  }
}
