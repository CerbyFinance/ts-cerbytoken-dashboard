/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "sealedDay",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sealedCachedDay",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cachedInterestPerShare",
        type: "uint256",
      },
    ],
    name: "CachedInterestPerShareSealed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "sealedDay",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "inflationAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalShares",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sharePrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
    ],
    name: "DailySnapshotSealed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endDay",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "interest",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "penalty",
        type: "uint256",
      },
    ],
    name: "StakeEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "StakeOwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakedAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startDay",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lockedForXDays",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sharesCount",
        type: "uint256",
      },
    ],
    name: "StakeStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lockedForXDays",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sharesCount",
        type: "uint256",
      },
    ],
    name: "StakeUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "stakeIds",
        type: "uint256[]",
      },
    ],
    name: "bulkEndStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "stakeIds",
        type: "uint256[]",
      },
    ],
    name: "bulkScrapeStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockedForXDays",
            type: "uint256",
          },
        ],
        internalType: "struct StartStake[]",
        name: "_startStakes",
        type: "tuple[]",
      },
    ],
    name: "bulkStartStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "stakeIds",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "bulkTransferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "numDays",
        type: "uint256",
      },
    ],
    name: "bumpDays",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bumpDays",
        type: "uint256",
      },
    ],
    name: "endStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bumpDays",
        type: "uint256",
      },
    ],
    name: "scrapeStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockedForXDays",
            type: "uint256",
          },
        ],
        internalType: "struct StartStake",
        name: "_startStake",
        type: "tuple",
      },
    ],
    name: "startStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateAllSnapshots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "givenDay",
        type: "uint256",
      },
    ],
    name: "updateSnapshots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cachedInterestPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "dailySnapshots",
    outputs: [
      {
        internalType: "uint256",
        name: "inflationAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalShares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sharePrice",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCachedInterestPerShareLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentCachedPerShareDay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentOneDay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDailySnapshotsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "givenDay",
        type: "uint256",
      },
    ],
    name: "getInterestById",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDay",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockedForXDays",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDay",
            type: "uint256",
          },
        ],
        internalType: "struct Stake",
        name: "stake",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "givenDay",
        type: "uint256",
      },
    ],
    name: "getInterestByStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "givenDay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest",
        type: "uint256",
      },
    ],
    name: "getPenaltyById",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDay",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockedForXDays",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDay",
            type: "uint256",
          },
        ],
        internalType: "struct Stake",
        name: "stake",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "givenDay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest",
        type: "uint256",
      },
    ],
    name: "getPenaltyByStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "givenDay",
        type: "uint256",
      },
    ],
    name: "getSharesCountById",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDay",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockedForXDays",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDay",
            type: "uint256",
          },
        ],
        internalType: "struct Stake",
        name: "stake",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "givenDay",
        type: "uint256",
      },
    ],
    name: "getSharesCountByStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "stakedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startDay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockedForXDays",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class Staking__factory {
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
